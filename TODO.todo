╭┄┄┄┄┄┄┄┄┄┄┄╮
│ r3bl-cmdr │
╯           ╰┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄
documentation, move:
  ✔ copy some of this content over to the r3bl_rs_utils README @done(22-08-02 13:40)
  ✔ move `lolcat` module to `r3bl_rs_utils_core::tui` module @done(22-08-02 13:47)
  ✔ move tests to `r3bl_rs_utils` @done(22-08-02 13:47)
  ✔ move `tui` module to `r3bl_rs_utils::tui` module @done(22-08-02 15:04)
  ☐ docs.rs link is missing from crate (on crates.io)
  ☐ publish crate *after* r3bl_rs_utils is published

graphemes & focus mgmt support demo:
  ☐ create a POC `RenderComponent` that shows a cursor & graphemes
    - display a string eg: `Hi 📦 🙏🏽 👨🏾‍🤝‍👨🏿.`
    - allow component to have focus
    - allow component to have a cursor position
    - show cursor moving around the string (respecting grapheme clusters)
      - use JT's approach that's outlined in the README.md? or use `UnicodeStringExt`?
  ☐ implement simplest editor component (single line text field)
  ☐ implement simplest checkbox selection component (modal?)
    
introduce first DSL (JSX-like syntax):
  ✔ implement `style!` proc macro as first DSL JSX like syntax for TUI @done(22-07-06 15:29)
  ✔ split `tui_core` from `tui` and move it into `r3bl_rs_utils` @done(22-07-06 15:29)
  ✔ replace all use of `Style` with this macro @done(22-07-06 16:05)
  ☐ write DL tutorial on create DSL in Rust
    - based on: https://github.com/r3bl-org/r3bl-rs-utils/blob/main/macro/src/make_style/mod.rs
    - create tui category in DL
    - make sure to publicize this article on mailchimp, reddit, users.rust-lang.org
    
support for text wrapping:
  ☐ `textwrap` crate

routing:
  ☐ introduce routing concept to switch between apps (with + without layout)
    - "in-app": shared state among all components, route in state? OR
    - "tmux style": have totally separate apps (each w/ separate redux stores, etc)
  ☐ build out the address book app (with routing) & use it to test out ideas
  
pre built components - editor:
  ☐ example editor Sodium: https://github.com/redox-os/sodium
  ☐ syntax highlighting video: https://youtu.be/4vw5iJMLQx0
  ☐ syntax highlighting crate: https://docs.rs/syntect/latest/syntect/
  ☐ scrolling: data buffer, cursor pos (row, col), scrolling (row offset, col offset)
    - [src](https://github.com/nazmulidris/cli-editor/blob/main/src/main.rs)
    - [viewer tutorial](https://tinyurl.com/2fdmgwxs)
    - [editor tutorial](https://tinyurl.com/2b72v7u6)
    - [search tutorial](https://tinyurl.com/27eukjbp)
    - [syntax highlighting tutorial](https://tinyurl.com/2burb3by)
  ☐ undo & redo

pre built components - multi select chooser:
  ☐ TODO

pre built components - autocompletion provider:
  ☐ TODO

mdns & p2p:
  ☐ Ideate on what this might look like
    - local service discovery
    - easy authentication (cloud auth provider login?)

new stuff:
  ☐ flow editor
  ☐ diagrams
